<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Personal Rant of a curious mind]]></title>
  <link href="http://shreyasrk.github.io/atom.xml" rel="self"/>
  <link href="http://shreyasrk.github.io/"/>
  <updated>2014-05-12T21:41:39+05:30</updated>
  <id>http://shreyasrk.github.io/</id>
  <author>
    <name><![CDATA[Shreyas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Traits of a Great Developer]]></title>
    <link href="http://shreyasrk.github.io/blog/2014/05/12/traits-of-a-software-developer/"/>
    <updated>2014-05-12T21:28:49+05:30</updated>
    <id>http://shreyasrk.github.io/blog/2014/05/12/traits-of-a-software-developer</id>
    <content type="html"><![CDATA[<p>What makes you a great software developer? Is it the knowledge of computer Science and mathematics, the awesomeness of showing your flair by doing some cool projects or some inbuilt quality to tweak around, read code and do things accordingly?</p>

<p>None of them, although Math/Computer Science can teach you logical abilities &ndash; one of the fundamental qualities of a developer. I realized it delves down to the four basic things (ingredients, if you may call) that you can be an awesome programmer.</p>

<p>Be a master in the below areas:</p>

<ul>
<li>The operating system that you work in &ndash; Be it the ubercool Linux, buggy Windows or the wannabe Mac, you must know all/most of it&rsquo;s OS commands. And these can be learn only via the terminal/command prompt.</li>
<li>A programming language. Know it in-and-out. Try to work everything of an idea into the same language throughout and see if you can dig out the hidden features of them in the process.</li>
<li>An editor &ndash; vim, emacs, sublime or an IDE of your choice. By good means to know all of it&rsquo;s keyboard shortcuts, the usage of all of it&rsquo;s features and to know how to tweak them.</li>
<li>Your favorite Version control system &ndash; git, svn, mercurial or whatever. Be awesome in a way that you can even teach others in the shortest and quickest way possible.</li>
</ul>


<p>It delves down to only these four. And nothing else. Of course, as time evolves, all of these changes for your choice and hence, it is a recursive loop all over.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up Octopress Blog]]></title>
    <link href="http://shreyasrk.github.io/blog/2014/05/09/setting-up-octopress-blog/"/>
    <updated>2014-05-09T23:24:37+05:30</updated>
    <id>http://shreyasrk.github.io/blog/2014/05/09/setting-up-octopress-blog</id>
    <content type="html"><![CDATA[<p>So, I finally begin to blog again! All thanks to a blogging framework crashed into accidentally, of course.</p>

<p><a href="http://jekyllrb.com/">Jekyll.rb</a> is one powerful micro-blogging framework written in Ruby. It comes with a unique integrator that can easily create, segment and categorize blog posts without hassles. You simply create apost, edit/change, publish and your post is ready. Right in your own site.</p>

<p>Github is advantageous in a lot of ways &ndash; social coding, side projects, open source and cool hacks. It now bumpered with a bonanza &ndash; <a href="https://pages.github.com/">The GitHub Pages</a>. WHat I finally found from the boring wordpress is that, it can be configured, the way we want, the style we like and the site we wish(although, with a site-domain purchase).</p>

<p>Finally, the combination of above turned out to be <a href="http://octopress.org/">Octopress</a>. This is one of the most easiest blog engines, a programmer can fall in love with. Of course, keeping in mind the love of programming but blogging simultaneously. We as programmers tend to do stuff by code all the time and this came as a convenience. What&rsquo;s more is that you can show off keeping your skills intact.</p>

<p>Such engines help in a lot of ways of learning &ndash;</p>

<pre><code>1. A programming language - Ruby.
2. A template engine.
3. Automating posts - the markdown
4. versioning for site and source - git
</code></pre>

<p>Good that if I&rsquo;m just scribbling, I&rsquo;m not just writing stuff up. I&rsquo;m programming too. So, let me begin the new, old journey of blogging back into the life &ndash; with a way I always wanted.</p>

<p>I wanted to add some lines to how to setup your own blog via Octopress too.</p>

<ul>
<li>Get yourself a GitHub user, please. You won&rsquo;t regret.</li>
<li>Setup your site via <a href="https://pages.github.com/">GitHub Site Hosting</a></li>
<li>Install the <a href="http://octopress.org/docs/setup/">Octopress-Jekyll</a> bundle.</li>
<li>Make sure you <a href="http://octopress.org/docs/deploying/github/">deploy your site properly</a></li>
<li>Start Blogging!</li>
</ul>


<p>Now for the missing part. Octopress provides you a clean way of setting up. However, there are some glitches during continuous blogging &ndash; Git might give problems or something will break down so here&rsquo;s my extra findings:</p>

<ul>
<li>When you write/edit posts, first commit the changes</li>
<li>Generate the site using <code>bundle exec rake generate</code> and deploy to <code>master</code> branch via <code>bundle exec rake deploy</code>. This will first add the site.</li>
<li>Push source branch to your repo too (<code>git push origin source</code>). This will ensure you can work anywhere you want with a simple pull/clone.</li>
</ul>


<p>Enjoy!</p>
]]></content>
  </entry>
  
</feed>
